package postgres

import "strings"

var postgresKeyWords = []string{
	"ADD", "ALL", "ALTER",
	"ANALYZE", "AND", "AS",
	"ASC", "ASENSITIVE", "BEFORE",
	"BETWEEN", "BIGINT", "BINARY",
	"BLOB", "BOTH", "BY",
	"CALL", "CASCADE", "CASE",
	"CHANGE", "CHAR", "CHARACTER",
	"CHECK", "COLLATE", "COLUMN",
	"CONDITION", "CONNECTION", "CONSTRAINT",
	"CONTINUE", "CONVERT", "CREATE",
	"CROSS", "CURRENT_DATE", "CURRENT_TIME",
	"CURRENT_TIMESTAMP", "CURRENT_USER", "CURSOR",
	"DATABASE", "DATABASES", "DAY_HOUR",
	"DAY_MICROSECOND", "DAY_MINUTE", "DAY_SECOND",
	"DEC", "DECIMAL", "DECLARE",
	"DEFAULT", "DELAYED", "DELETE",
	"DESC", "DESCRIBE", "DETERMINISTIC",
	"DISTINCT", "DISTINCTROW", "DIV",
	"DOUBLE", "DROP", "DUAL",
	"EACH", "ELSE", "ELSEIF",
	"ENCLOSED", "ESCAPED", "EXISTS",
	"EXIT", "EXPLAIN", "FALSE",
	"FETCH", "FLOAT", "FLOAT4",
	"FLOAT8", "FOR", "FORCE",
	"FOREIGN", "FROM", "FULLTEXT",
	"GOTO", "GRANT", "GROUP",
	"HAVING", "HIGH_PRIORITY", "HOUR_MICROSECOND",
	"HOUR_MINUTE", "HOUR_SECOND", "IF",
	"IGNORE", "IN", "INDEX",
	"INFILE", "INNER", "INOUT",
	"INSENSITIVE", "INSERT", "INT",
	"INT1", "INT2", "INT3",
	"INT4", "INT8", "INTEGER",
	"INTERVAL", "INTO", "IS",
	"ITERATE", "JOIN", "KEY",
	"KEYS", "KILL", "LABEL",
	"LEADING", "LEAVE", "LEFT",
	"LIKE", "LIMIT", "LINEAR",
	"LINES", "LOAD", "LOCALTIME",
	"LOCALTIMESTAMP", "LOCK", "LONG",
	"LONGBLOB", "LONGTEXT", "LOOP",
	"LOW_PRIORITY", "MATCH", "MEDIUMBLOB",
	"MEDIUMINT", "MEDIUMTEXT", "MIDDLEINT",
	"MINUTE_MICROSECOND", "MINUTE_SECOND", "MOD",
	"MODIFIES", "NATURAL", "NOT",
	"NO_WRITE_TO_BINLOG", "NULL", "NUMERIC",
	"ON", "OPTIMIZE", "OPTION",
	"OPTIONALLY", "OR", "ORDER",
	"OUT", "OUTER", "OUTFILE",
	"PRECISION", "PRIMARY", "PROCEDURE",
	"PURGE", "RAID0", "RANGE",
	"READ", "READS", "REAL",
	"REFERENCES", "REGEXP", "RELEASE",
	"RENAME", "REPEAT", "REPLACE",
	"REQUIRE", "RESTRICT", "RETURN",
	"REVOKE", "RIGHT", "RLIKE",
	"SCHEMA", "SCHEMAS", "SECOND_MICROSECOND",
	"SELECT", "SENSITIVE", "SEPARATOR",
	"SET", "SHOW", "SMALLINT",
	"SPATIAL", "SPECIFIC", "SQL",
	"SQLEXCEPTION", "SQLSTATE", "SQLWARNING",
	"SQL_BIG_RESULT", "SQL_CALC_FOUND_ROWS", "SQL_SMALL_RESULT",
	"SSL", "STARTING", "STRAIGHT_JOIN",
	"TABLE", "TERMINATED", "THEN",
	"TINYBLOB", "TINYINT", "TINYTEXT",
	"TO", "TRAILING", "TRIGGER",
	"TRUE", "UNDO", "UNION",
	"UNIQUE", "UNLOCK", "UNSIGNED",
	"UPDATE", "USAGE", "USE",
	"USING", "UTC_DATE", "UTC_TIME",
	"UTC_TIMESTAMP", "VALUES", "VARBINARY",
	"VARCHAR", "VARCHARACTER", "VARYING",
	"WHEN", "WHERE", "WHILE",
	"WITH", "WRITE", "X509",
	"XOR", "YEAR_MONTH", "ZEROFILL",
	"ACTION", "BIT", "DATE", "ENUM", "NO", "TEXT", "TIME", "TIMESTAMP",
	// PostgreSQL 特有或重要的关键字
	"ABORT", "ABSOLUTE", "ACCESS", "ACTION", "AGGREGATE", "ALSO", "ASSERTION", "ASSIGNMENT",
	"AT", "AUTHORIZATION", "BACKWARD", "BETWEEN", "BIGSERIAL", "BINARY", "BIT", "BOOLEAN",
	"BYTEA", "CACHE", "CALLED", "CASCADE", "CAST", "CATALOG", "CHAIN", "CHARACTER", "CHARACTERISTICS",
	"CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE", "COLLATION", "COLUMN", "COMMENT",
	"COMMIT", "COMMITTED", "CONSTRAINT", "CONVERSION", "COPY", "CREATE", "CROSS", "CURRENT",
	"CURRENT_CATALOG", "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_USER", "CURSOR", "CYCLE",
	"DATABASE", "DAY", "DEALLOCATE", "DECLARE", "DEFAULT", "DEFERRABLE", "DEFERRED", "DEFINER",
	"DELETE", "DELIMITER", "DELIMITERS", "DESC", "DICTIONARY", "DISABLE", "DISCARD", "DISTINCT",
	"DO", "DOMAIN", "DOUBLE", "DROP", "EACH", "ELSE", "ENABLE", "ENCODING", "ENCRYPTED", "END",
	"ESCAPE", "EXCEPT", "EXCLUDE", "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXTENSION",
	"EXTERNAL", "EXTRACT", "FALSE", "FETCH", "FIRST", "FLOAT", "FOR", "FORCE", "FOREIGN", "FORWARD",
	"FREEZE", "FROM", "FULL", "FUNCTION", "GRANT", "GREATEST", "GROUP", "HANDLER", "HAVING",
	"HEADER", "HOLD", "HOUR", "IDENTITY", "IF", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT",
	"IN", "INCLUDING", "INCREMENT", "INDEX", "INHERIT", "INITIALLY", "INNER", "INOUT", "INPUT",
	"INSENSITIVE", "INSERT", "INSTEAD", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER",
	"IS", "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE", "LAST", "LATERAL",
	"LEADING", "LEAST", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME",
	"LOCALTIMESTAMP", "LOCATION", "LOCK", "LOGIN", "MATCH", "MAXVALUE", "MINUTE", "MINVALUE",
	"MODE", "MONTH", "MOVE", "NAME", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEXT", "NO",
	"NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL", "NULLIF", "NUMERIC",
	"OBJECT", "OF", "OFF", "OFFSET", "OIDS", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS",
	"OR", "ORDER", "OUT", "OUTER", "OVER", "OVERLAPS", "OVERLAY", "OWNED", "OWNER", "PARSER",
	"PARTIAL", "PARTITION", "PASSWORD", "PLACING", "PLANS", "POSITION", "PRECEDING", "PRECISION",
	"PREPARE", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "QUOTE",
	"RANGE", "READ", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REFERENCES", "REFRESH",
	"REINDEX", "RELATIVE", "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
	"RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK",
	"ROW", "ROWS", "RULE", "SAVEPOINT", "SCHEMA", "SCROLL", "SEARCH", "SECOND", "SECURITY",
	"SELECT", "SEQUENCE", "SERIAL", "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER",
	"SET", "SETOF", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SMALLSERIAL", "SNAPSHOT", "SOME",
	"SQL", "STABLE", "STANDALONE", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
	"STORAGE", "STRICT", "STRIP", "SUBSTRING", "SYMMETRIC", "SYSID", "SYSTEM", "TABLE",
	"TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT", "THEN", "TIME", "TIMESTAMP",
	"TO", "TRAILING", "TRANSACTION", "TREAT", "TRIGGER", "TRIM", "TRUE", "TRUNCATE", "TRUSTED",
	"TYPE", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN",
	"UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATOR", "VALUE",
	"VALUES", "VARCHAR", "VARYING", "VERBOSE", "VERSION", "VIEW", "VOLATILE", "WHEN", "WHERE",
	"WHITESPACE", "WINDOW", "WITH", "WITHOUT", "WORK", "WRAPPER", "WRITE", "YEAR", "YES", "ZONE",
}

// IsKeyWord check if a keyword
func IsKeyWord(str string) bool {
	for _, val := range postgresKeyWords {
		if strings.ToUpper(str) == val {
			return true
		}
	}

	return false
}
